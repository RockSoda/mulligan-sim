[{"/Users/yuxiaohan/Documents/GitHub/mulligan-sim/src/index.js":"1","/Users/yuxiaohan/Documents/GitHub/mulligan-sim/src/App.js":"2","/Users/yuxiaohan/Documents/GitHub/mulligan-sim/src/reportWebVitals.js":"3"},{"size":500,"mtime":1607288356734,"results":"4","hashOfConfig":"5"},{"size":2735,"mtime":1616543380199,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1607288356736,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"6f6ts4",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yuxiaohan/Documents/GitHub/mulligan-sim/src/index.js",[],["16","17"],"/Users/yuxiaohan/Documents/GitHub/mulligan-sim/src/App.js",["18","19"],"import { useState, useEffect } from \"react\"\n\nconst api = \"https://api.scryfall.com/cards/named?exact=\"\n\nfunction App() {\n  const [query, setQuery] = useState('')\n  const [card, setCard] = useState([])\n  const [hand, setHand] = useState([])\n\n  const handleFocus = (event) => event.target.select()\n\n  useEffect(() => {\n    toSearch(hand)\n  }, [hand])\n\n  function toDeck(evt) {\n    if (!evt.key === \"Enter\" && !evt.type === \"click\") return\n\n    let decklist = []\n    let deckcode = ''\n\n    deckcode = query\n\n    deckcode = deckcode.split(\"Sideboard\")[0]\n\n    deckcode = deckcode.split(\"Deck\")[1]\n\n    let re = /([0-9]+)([a-z|\\s,'\"-]*)\\(/gi\n    let m\n    let i\n    do {\n      m = re.exec(deckcode)\n      if (m) {\n        for (i = 0; i < m[1]; ++i) {\n          decklist.push(m[2])\n        }\n      }\n    } while (m)\n    if (decklist.length === 0) {\n      re = /([0-9]+)([a-z|\\s,'\"-]*)/gi\n      do {\n        m = re.exec(deckcode)\n        if (m) {\n          for (i = 0; i < m[1]; ++i) {\n            decklist.push(m[2])\n          }\n        }\n      } while (m)\n    }\n\n    toHand(decklist)\n  }\n\n  function toHand(decklist) {\n    let tmpHand = []\n    for (let i = 0; i < 7; i++) {\n      const index = Math.floor(Math.random() * decklist.length)\n      tmpHand.push(decklist[index])\n      decklist.splice(index, 1)\n    }\n    setHand(tmpHand)\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  async function toSearch(hand) {\n    for (let i = 0; i < hand.length; i++) {\n      search(i, hand[i])\n      await sleep(50 * (i + 1))\n    }\n  }\n\n  async function search(i, q) {\n\n    await fetch(`${api}${q}`)\n      .then(res => res.json())\n      .then(result => {\n        if (i === 0) {\n          setCard([result])\n        } else {\n          setCard(prevCards => {\n            return [...prevCards, result]\n          })\n        }\n      })\n  }\n\n  return (\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Paste your deck code here...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={toDeck}\n            onFocus={handleFocus}\n          />\n        </div>\n        <div className=\"container\">\n          {(card.length === 7) && (card.map((c) => (\n            <div className=\"pic\">\n              <img src={(typeof c.image_uris != \"undefined\") ? (c.image_uris.border_crop) : (c.card_faces[0].image_uris.border_crop)}></img>\n            </div>\n          )))}\n          <div className=\"vertical-center\">\n            <button onClick={toDeck}>Mulligan</button>\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","/Users/yuxiaohan/Documents/GitHub/mulligan-sim/src/reportWebVitals.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":14,"column":6,"nodeType":"26","endLine":14,"endColumn":12,"suggestions":"27"},{"ruleId":"28","severity":1,"message":"29","line":107,"column":15,"nodeType":"30","endLine":107,"endColumn":135},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toSearch'. Either include it or remove the dependency array.","ArrayExpression",["33"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [hand, toSearch]",{"range":"36","text":"37"},[341,347],"[hand, toSearch]"]